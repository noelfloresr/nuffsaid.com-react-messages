{"ast":null,"code":"var _jsxFileName = \"/Users/noelflores/Documents/projects/tests/nuffsaid.com-react-messages/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport generateMessage from \"./Api\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport styles from \"./App.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardRow = {\n  flex: 1,\n  minWidth: \"350px\"\n};\nconst cardError = {\n  marginBottom: \"15px\",\n  backgroundColor: \"#F56236\"\n};\nconst cardWarning = {\n  marginBottom: \"15px\",\n  backgroundColor: \"#FCE788\"\n};\nconst cardInfo = {\n  marginBottom: \"15px\",\n  backgroundColor: \"#88FCA3\"\n};\nconst actionButton = {\n  backgroundColor: \"#88FCA3\"\n};\n\nconst App = () => {\n  _s();\n\n  var _errorMessages$map, _warningMessages$map, _infoMessages$map;\n\n  const [errorMessages, setErrorMessages] = useState([]);\n  const [warningMessages, setWarningMessages] = useState([]);\n  const [infoMessages, setInfoMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingLabel, setLoadingLabel] = useState(\"Stop\");\n  useEffect(() => {\n    if (isLoading) {\n      const cleanUp = generateMessage(message => {\n        switch (message.priority) {\n          case 0:\n            setErrorMessages(oldMessages => [...oldMessages, message]);\n            break;\n\n          case 1:\n            setWarningMessages(oldMessages => [...oldMessages, message]);\n            break;\n\n          case 2:\n            setInfoMessages(oldMessages => [...oldMessages, message]);\n            break;\n        }\n      });\n      return cleanUp;\n    }\n  }, [setErrorMessages, setWarningMessages, setInfoMessages, isLoading]);\n\n  const handleClear = () => {\n    setErrorMessages([]);\n    setWarningMessages([]);\n    setInfoMessages([]);\n  };\n\n  const handleLoading = () => {\n    isLoading ? setLoadingLabel(\"Play\") : setLoadingLabel(\"Stop\");\n    isLoading ? setIsLoading(false) : setIsLoading(true);\n  };\n\n  const handleRemoveMessage = (message, priority) => {\n    switch (priority) {\n      case 0:\n        setErrorMessages(errorMessages.filter(msg => msg.message !== message));\n        break;\n\n      case 1:\n        setWarningMessages(warningMessages.filter(msg => msg.message !== message));\n        break;\n\n      case 2:\n        setInfoMessages(infoMessages.filter(msg => msg.message !== message));\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"nuffsaid.com Coding Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actionButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: actionButton,\n        onClick: handleLoading,\n        children: loadingLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: actionButton,\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardRow,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error type 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Count \", errorMessages.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), errorMessages === null || errorMessages === void 0 ? void 0 : (_errorMessages$map = errorMessages.map) === null || _errorMessages$map === void 0 ? void 0 : _errorMessages$map.call(errorMessages, msg => /*#__PURE__*/_jsxDEV(Card, {\n          style: cardError,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [msg === null || msg === void 0 ? void 0 : msg.message, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveMessage(msg === null || msg === void 0 ? void 0 : msg.message, msg === null || msg === void 0 ? void 0 : msg.priority),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, msg === null || msg === void 0 ? void 0 : msg.message, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardRow,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error type 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Count \", warningMessages.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), warningMessages === null || warningMessages === void 0 ? void 0 : (_warningMessages$map = warningMessages.map) === null || _warningMessages$map === void 0 ? void 0 : _warningMessages$map.call(warningMessages, msg => /*#__PURE__*/_jsxDEV(Card, {\n          style: cardWarning,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [msg === null || msg === void 0 ? void 0 : msg.message, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveMessage(msg === null || msg === void 0 ? void 0 : msg.message, msg === null || msg === void 0 ? void 0 : msg.priority),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, msg === null || msg === void 0 ? void 0 : msg.message, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardRow,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Error type 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Count \", infoMessages.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), infoMessages === null || infoMessages === void 0 ? void 0 : (_infoMessages$map = infoMessages.map) === null || _infoMessages$map === void 0 ? void 0 : _infoMessages$map.call(infoMessages, msg => /*#__PURE__*/_jsxDEV(Card, {\n          style: cardInfo,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [msg === null || msg === void 0 ? void 0 : msg.message, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveMessage(msg === null || msg === void 0 ? void 0 : msg.message, msg === null || msg === void 0 ? void 0 : msg.priority),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"il+rrtUx5v3n7D7M7V3pwSwXxxA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noelflores/Documents/projects/tests/nuffsaid.com-react-messages/src/App.tsx"],"names":["React","useState","useEffect","generateMessage","Card","CardContent","styles","cardRow","flex","minWidth","cardError","marginBottom","backgroundColor","cardWarning","cardInfo","actionButton","App","errorMessages","setErrorMessages","warningMessages","setWarningMessages","infoMessages","setInfoMessages","isLoading","setIsLoading","loadingLabel","setLoadingLabel","cleanUp","message","priority","oldMessages","handleClear","handleLoading","handleRemoveMessage","filter","msg","container","actionButtons","cardContainer","length","map"],"mappings":"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","sourcesContent":["import React, { CSSProperties, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport generateMessage, { Message } from \"./Api\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport styles from \"./App.module.scss\";\n\nconst cardRow: CSSProperties = {\n  flex: 1,\n  minWidth: \"350px\",\n};\n\nconst cardError: CSSProperties = {\n  marginBottom: \"15px\",\n  backgroundColor: \"#F56236\",\n};\n\nconst cardWarning: CSSProperties = {\n  marginBottom: \"15px\",\n  backgroundColor: \"#FCE788\",\n};\n\nconst cardInfo: CSSProperties = {\n  marginBottom: \"15px\",\n  backgroundColor: \"#88FCA3\",\n};\n\nconst actionButton: CSSProperties = {\n  backgroundColor: \"#88FCA3\",\n};\n\nconst App: React.FC<{}> = () => {\n  const [errorMessages, setErrorMessages] = useState<Message[]>([]);\n  const [warningMessages, setWarningMessages] = useState<Message[]>([]);\n  const [infoMessages, setInfoMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingLabel, setLoadingLabel] = useState(\"Stop\");\n\n  useEffect(() => {\n    if (isLoading) {\n      const cleanUp = generateMessage((message: Message) => {\n        switch (message.priority) {\n          case 0:\n            setErrorMessages((oldMessages) => [...oldMessages, message]);\n            break;\n          case 1:\n            setWarningMessages((oldMessages) => [...oldMessages, message]);\n            break;\n          case 2:\n            setInfoMessages((oldMessages) => [...oldMessages, message]);\n            break;\n        }\n      });\n      return cleanUp;\n    }\n  }, [setErrorMessages, setWarningMessages, setInfoMessages, isLoading]);\n\n  const handleClear = () => {\n    setErrorMessages([]);\n    setWarningMessages([]);\n    setInfoMessages([]);\n  };\n\n  const handleLoading = () => {\n    isLoading ? setLoadingLabel(\"Play\") : setLoadingLabel(\"Stop\");\n    isLoading ? setIsLoading(false) : setIsLoading(true);\n  };\n\n  const handleRemoveMessage = (message: string, priority: number) => {\n    switch (priority) {\n      case 0:\n        setErrorMessages(\n          errorMessages.filter((msg) => msg.message !== message)\n        );\n        break;\n      case 1:\n        setWarningMessages(\n          warningMessages.filter((msg) => msg.message !== message)\n        );\n        break;\n      case 2:\n        setInfoMessages(infoMessages.filter((msg) => msg.message !== message));\n        break;\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1>nuffsaid.com Coding Challenge</h1>\n      <hr></hr>\n      <div className={styles.actionButtons}>\n        <button style={actionButton} onClick={handleLoading}>\n          {loadingLabel}\n        </button>\n        <button style={actionButton} onClick={handleClear}>\n          Clear\n        </button>\n      </div>\n      <div className={styles.cardContainer}>\n        <div style={cardRow}>\n          <h2>Error type 1</h2>\n          <span>Count {errorMessages.length}</span>\n          {errorMessages?.map?.((msg) => (\n            <Card style={cardError} key={msg?.message}>\n              <CardContent>\n                {msg?.message}\n                <button\n                  onClick={() =>\n                    handleRemoveMessage(msg?.message, msg?.priority)\n                  }\n                >\n                  Clear\n                </button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n        <div style={cardRow}>\n          <h2>Error type 2</h2>\n          <span>Count {warningMessages.length}</span>\n          {warningMessages?.map?.((msg) => (\n            <Card style={cardWarning} key={msg?.message}>\n              <CardContent>\n                {msg?.message}\n                <button\n                  onClick={() =>\n                    handleRemoveMessage(msg?.message, msg?.priority)\n                  }\n                >\n                  Clear\n                </button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n        <div style={cardRow}>\n          <h2>Error type 3</h2>\n          <span>Count {infoMessages.length}</span>\n          {infoMessages?.map?.((msg) => (\n            <Card style={cardInfo}>\n              <CardContent>\n                {msg?.message}\n                <button\n                  onClick={() =>\n                    handleRemoveMessage(msg?.message, msg?.priority)\n                  }\n                >\n                  Clear\n                </button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}