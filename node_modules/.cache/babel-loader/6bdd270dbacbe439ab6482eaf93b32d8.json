{"ast":null,"code":"import random from 'lodash/random';\nimport faker from 'faker';\nimport { Observable } from 'rxjs';\nvar Priority;\n\n(function (Priority) {\n  Priority[Priority[\"Error\"] = 0] = \"Error\";\n  Priority[Priority[\"Warn\"] = 1] = \"Warn\";\n  Priority[Priority[\"Info\"] = 2] = \"Info\";\n})(Priority || (Priority = {}));\n\nconst observable = new Observable(subscriber => {\n  const generate = () => {\n    const message = faker.lorem.sentence();\n    const priority = random(0, 2);\n    const nextInMS = random(500, 3000);\n    subscriber.next({\n      message,\n      priority\n    });\n    setTimeout(generate, nextInMS);\n  };\n\n  generate();\n});\n\nconst subscribe = callback => {\n  const subscription = observable.subscribe({\n    next: callback\n  });\n  return () => subscription.unsubscribe();\n};\n\nexport default subscribe;","map":{"version":3,"sources":["/Users/noelflores/Documents/projects/tests/nuffsaid.com-react-messages/src/Api.ts"],"names":["random","faker","Observable","Priority","observable","subscriber","generate","message","lorem","sentence","priority","nextInMS","next","setTimeout","subscribe","callback","subscription","unsubscribe"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,MAA3B;IAEKC,Q;;WAAAA,Q;AAAAA,EAAAA,Q,CAAAA,Q;AAAAA,EAAAA,Q,CAAAA,Q;AAAAA,EAAAA,Q,CAAAA,Q;GAAAA,Q,KAAAA,Q;;AAWL,MAAMC,UAAU,GAAG,IAAIF,UAAJ,CAAwBG,UAAU,IAAI;AACvD,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,OAAO,GAAGN,KAAK,CAACO,KAAN,CAAYC,QAAZ,EAAhB;AACA,UAAMC,QAAQ,GAAGV,MAAM,CAAC,CAAD,EAAI,CAAJ,CAAvB;AACA,UAAMW,QAAQ,GAAGX,MAAM,CAAC,GAAD,EAAM,IAAN,CAAvB;AACAK,IAAAA,UAAU,CAACO,IAAX,CAAgB;AAAEL,MAAAA,OAAF;AAAWG,MAAAA;AAAX,KAAhB;AACAG,IAAAA,UAAU,CAACP,QAAD,EAAWK,QAAX,CAAV;AACD,GAND;;AAOAL,EAAAA,QAAQ;AACT,CATkB,CAAnB;;AAWA,MAAMQ,SAAS,GAAIC,QAAD,IAA0C;AAC1D,QAAMC,YAAY,GAAGZ,UAAU,CAACU,SAAX,CAAqB;AACxCF,IAAAA,IAAI,EAAEG;AADkC,GAArB,CAArB;AAGA,SAAO,MAAMC,YAAY,CAACC,WAAb,EAAb;AACD,CALD;;AAOA,eAAeH,SAAf","sourcesContent":["import random from 'lodash/random';\nimport faker from 'faker';\nimport { Observable } from 'rxjs';\n\nenum Priority {\n  Error,\n  Warn,\n  Info,\n}\n\nexport interface Message {\n  message: string;\n  priority: Priority;\n}\n\nconst observable = new Observable<Message>(subscriber => {\n  const generate = () => {\n    const message = faker.lorem.sentence();\n    const priority = random(0, 2) as Priority;\n    const nextInMS = random(500, 3000);\n    subscriber.next({ message, priority });\n    setTimeout(generate, nextInMS);\n  };\n  generate();\n});\n\nconst subscribe = (callback: (message: Message) => void) => {\n  const subscription = observable.subscribe({\n    next: callback,\n  });\n  return () => subscription.unsubscribe();\n};\n\nexport default subscribe;\n"]},"metadata":{},"sourceType":"module"}